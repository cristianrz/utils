#!/bin/sh
set -eu

# log tag message
#
log() {
	logger -t "profileinit" "$*"
	echo "$*"
}

find_process() {
	ps -o "pid,args" -A | while read -r pid args; do
		case "$args" in
		"$PEXP") echo "$pid" ;;
		*) continue ;;
		esac
	done
}

rc_run() {
	case "$1" in
	start | stop | status | restart) rc_"$1" ;;
	*)
		echo "usage: $NAME {start|stop|restart|status}" >&2
		exit 1
		;;
	esac
}

rc_start() {
	log "starting $NAME service"

	if [ -s "${PID_FILE-}" ]; then
		log "$NAME service is already running"
	else
		pid="$(find_process)"

		if [ -n "$pid" ]; then
			log "$NAME service already running"
		else
			/bin/sh -c "$DAEMON"
			log "$NAME service started"
		fi
	fi
}

# rc_stop pid_file command
#
rc_stop() {
	log "stopping $NAME service"

	if [ -s "${PID_FILE-}" ]; then
		xargs kill -15 <"$PID_FILE" || true
		rm -f "$PID_FILE"
	else
		pid="$(find_process)"

		if [ -z "$pid" ]; then
			log "$NAME service is not running"
		else
			set -- -15

			for p in $pid; do
				set -- "$@" "$p"
			done

			kill "$@" || true
		fi
	fi
}

rc_restart() {
	rc_stop "$@"
	rc_start "$@"
}

rc_status() {
	pid="$(find_process)"

	if [ -n "${PID_FILE-}" ]; then
		case "${PID_FILE-}" in
		pid) echo "service $NAME is running" ;;
		*)
			echo "service $NAME is not running"
			return 1
			;;
		esac
	elif [ -n "$pid" ]; then
		echo "service $NAME is running"
	else
		echo "service $NAME is not running"
		return 1
	fi
}
